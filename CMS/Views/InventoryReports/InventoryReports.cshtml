@{
	ViewBag.Title = "InventoryReports";
	if (Session["userrole"] == null)
	{
		Html.Action("LoginPageView", "LoginPage");
	}
	else
	{
		int userid = (int)Session["userid"];
		string userrole = Session["userrole"].ToString();
		if (userrole.Equals("SR"))
		{
			Layout = "~/Views/Shared/LoginLayoutSP.cshtml";
		}
		else if (userrole.Equals("A"))
		{
			Layout = "~/Views/Shared/LoginLayout.cshtml";
		}
		else
		{

		}
	}
}

<div class="container">
	<div class="row">
		<div class="col-md-3"> 
			<h2>InventoryReports</h2>
		</div>
		<div class="col-md-9" style="text-align:right">
			<br />
			<h9>
				Welcome!
			</h9>@Session["name"].ToString()<br />
			<p id="showtime"></p>
		</div>
	</div>
	@model IEnumerable<CMS.ViewModel.SalesInventoryvm>
	@{
		var grid = new WebGrid(Model, columnNames: new[] { "productID", "productName", "Colors", "Sizes", "QtyInStock" }, rowsPerPage: 10);
	}
	<div class="row">
		<div class="col-md-6">
			@using (Html.BeginForm("InventoryReportsPName", "InventoryReports", FormMethod.Post))
			{
				@Html.AntiForgeryToken()
				<fieldset class="nav navbar-nav">
					<div class="nav navbar-nav">
						@Html.Label("ProdcutName: ")
					</div>
					<div class="nav navbar-nav">
						@Html.TextBox("pName", "", new { onchange = "this.form.submit();" })
					</div>
				</fieldset>
			}
		</div>
		<div class="col-md-6">
			@using (Html.BeginForm("InventoryReportsPNumber", "InventoryReports", FormMethod.Post))
			{
				@Html.AntiForgeryToken()
				<fieldset class="nav navbar-nav">
					<div class="nav navbar-nav">
						@Html.Label(" ProdcutNumber(ID): ")
					</div>
					<div class="nav navbar-nav">
						@Html.TextBox("pID", "", new { onchange = "this.form.submit();" })
					</div>
				</fieldset>
			}
		</div>
	</div>
	<div class="row">
		<div id="gridField">
			@grid.GetHtml(tableStyle: "wg table",
	headerStyle: "wg-header",
	alternatingRowStyle:"wg-alterRow",
	rowStyle:"wg-row",
			mode: WebGridPagerModes.All,
			columns: grid.Columns(
			grid.Column("productID"),
			grid.Column("productName", format: @<span>
		<span id="spanproduct_Name_@item.productID">@item.productName</span> @Html.TextBox("Product_Name_" + (int)item.productID, (string)item.productName, new { @style = "display:none" })
	</span>),
	grid.Column("Colors", format: @<span>
			<span id="spanColors_@item.productID">@item.Colors</span> @Html.TextBox("Colors_" + (int)item.productID, (string)item.Colors, new { @style = "display:none" })
		</span>),
	grid.Column("Sizes", format: @<span>
			<span id="spanSizes_@item.productID">@item.Sizes</span> @Html.TextBox("Sizes_" + (int)item.productID, (string)item.Sizes, new { @style = "display:none" })
		</span>),
	grid.Column("QtyInStock", format: @<span>
			<span id="spanQty_in_Stock_@item.productID">@item.Qty_In_Stock</span> @Html.TextBox("Qty_In_Stock_" + (int)item.productID, (int)item.Qty_In_Stock, new { @style = "display:none" })
		</span>),
	grid.Column(header: "Actions", format:@<text>
			<a href="#" id="Print_@item.productID " class="print">Print</a>
			<div class="avgrund-contents" style="display:none">
				<button onclick="avgrund.activate();" id="viewCss">View</button>
			</div>
			<a href="#" id="View_@item.productID" class="view">View</a></text>)
	)
	)
		</div>
	</div>
</div>

<div class="avgrund-popup" style="height:310px;">
	<div id="dialogprint">
		<div>
			@Html.Label("ProductID: ")
			<span id="pid"></span>
		</div>
		<div>
			@Html.Label("ProductName: ")
			<span id="pname"></span>
		</div>
		<div>
			@Html.Label("ManufacturerName: ")
			<span id="mname"></span>
		</div>
		<div>
			@Html.Label("Available Sizes: ")
			<span id="size"></span>
		</div>
		<div>
			@Html.Label("Available Colors: ")
			<span id="color"></span>
		</div>
		<div>
			@Html.Label("CategoryID: ")
			<span id="cid"></span>
		</div>
		<div>
			@Html.Label("Price :")
			<span id="up"></span>
		</div>
		<div>
			@Html.Label("Left in Stock :")
			<span id="us"></span>
		</div>
		<button onclick="avgrund.deactivate();">Close</button>
		<button id="print">Print</button>
	</div>
</div>
<div class="avgrund-cover"></div>

@section scripts {
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js"></script>
	<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
	<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js" type="text/javascript"></script>
	<script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.11.1/jquery-ui.min.js" type="text/javascript"></script>
	<script type="text/javascript">
		(function () {

			var container = document.documentElement,
				  popup = document.querySelector('.avgrund-popup'),
				  cover = document.querySelector('.avgrund-cover'),
				  currentState = null;

			addClass(container, 'avgrund-ready');

			// Deactivate on ESC
			function onDocumentKeyUp(event) {
				if (event.keyCode === 27) {
					deactivate();
				}
			}

			// Deactivate on click outside
			function onDocumentClick(event) {
				if (event.target === cover) {
					deactivate();
				}
			}

			function activate(state) {
				document.addEventListener('keyup', onDocumentKeyUp, false);
				document.addEventListener('click', onDocumentClick, false);

				removeClass(popup, currentState);
				addClass(popup, 'no-transition');
				addClass(popup, state);

				setTimeout(function () {
					removeClass(popup, 'no-transition');
					addClass(container, 'avgrund-active');
				}, 0);

				currentState = state;
			}

			function deactivate() {
				document.removeEventListener('keyup', onDocumentKeyUp, false);
				document.removeEventListener('click', onDocumentClick, false);

				removeClass(container, 'avgrund-active');
			}

			function disableBlur() {
				addClass(document.documentElement, 'no-blur');
			}

			function addClass(element, name) {
				element.className = element.className.replace(/\s+$/gi, '') + ' ' + name;
			}

			function removeClass(element, name) {
				element.className = element.className.replace(name, '');
			}

			window.avgrund = {
				activate: activate,
				deactivate: deactivate,
				disableBlur: disableBlur
			}

		})();

		$( function() {
			$(".print").on("click", function () {
				var str = $(this).attr("id").split("_");
				productID = str[1];
				$.ajax({
					type: "GET",
					contentType: "application/json; charset=utf-8",
					url: '@Url.Action("InventoryReportsView", "InventoryReports")',
					data: { "productID": productID },
					dataType: "json",
					beforeSend: function () {
					},
					success: function (data) {
						if (data.result == true) {
							$("#pid").text(data.pid);
							$("#pname").text(data.pname);
							$("#mname").text(data.manufacturerName);
							$("#size").text(data.size);
							$("#color").text(data.color);
							$("#cid").text(data.categoryid);
							$("#up").text(data.uniteprice);
							$("#us").text(data.unitinstock);
							$("#print").show();
							$("#viewCss").click();
						}
						else {
							alert('There is some error');
						}
					}
				});
			});

			$(".view").on("click", function () {
				var str = $(this).attr("id").split("_");
				productID = str[1];
				$.ajax({
					type: "GET",
					contentType: "application/json; charset=utf-8",
					url: '@Url.Action("InventoryReportsView", "InventoryReports")',
					data: { "productID": productID },
					dataType: "json",
					beforeSend: function () {
					},
					success: function (data) {
						if (data.result == true) {
							$("#pid").text(data.pid);
							$("#pname").text(data.pname);
							$("#mname").text(data.manufacturerName);
							$("#size").text(data.size);
							$("#color").text(data.color);
							$("#cid").text(data.categoryid);
							$("#up").text(data.uniteprice);
							$("#us").text(data.unitinstock);
							$("#print").hide();
							$("#viewCss").click();
						}
						else {
							alert('There is some error');
						}
					}
				});
			});
		});
		$("#print").click(function () {
			var printElement = document.getElementById("dialogprint").innerHTML;
			document.body.innerHTML = '<html><head>Detail</head><div><p id="showtime"></p></div><div>' + printElement + '</div></html>';
			window.print();
			window.location.reload();
		});
	</script>
	<script type="text/javascript" language="javascript">
			window.onload=function (){
				setInterval("var d = new Date(); var days = ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday']; var _m = parseInt(d.getMonth()) + 1; document.getElementById('showtime').innerHTML=days[ d.getDay() ]+' '+d.getFullYear()+'/'+_m+'/'+d.getDate()+' '+d.getHours()+':'+d.getMinutes()+':'+d.getSeconds();", 1000);
		   }
	</script>
	}